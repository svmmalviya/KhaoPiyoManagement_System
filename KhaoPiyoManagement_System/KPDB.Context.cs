//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KhaoPiyoManagement_System
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class KhaoPiyoEntities : DbContext
    {
        public KhaoPiyoEntities()
            : base("name=KhaoPiyoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Acc_Group_Master> Acc_Group_Master { get; set; }
        public DbSet<Account_Master> Account_Master { get; set; }
        public DbSet<Advance_Tran> Advance_Tran { get; set; }
        public DbSet<App_BillMaster> App_BillMaster { get; set; }
        public DbSet<Attendent_Master> Attendent_Master { get; set; }
        public DbSet<Bank_Master> Bank_Master { get; set; }
        public DbSet<Billing_Detail> Billing_Detail { get; set; }
        public DbSet<Billing_Detail_Vend> Billing_Detail_Vend { get; set; }
        public DbSet<Billing_Master> Billing_Master { get; set; }
        public DbSet<Billing_Master_Vend> Billing_Master_Vend { get; set; }
        public DbSet<Billing_Online> Billing_Online { get; set; }
        public DbSet<Billing_Payment> Billing_Payment { get; set; }
        public DbSet<Billing_Tax> Billing_Tax { get; set; }
        public DbSet<Billing_Tax_Vend> Billing_Tax_Vend { get; set; }
        public DbSet<BillPrint_Record> BillPrint_Record { get; set; }
        public DbSet<Category_Master> Category_Master { get; set; }
        public DbSet<Company_Master> Company_Master { get; set; }
        public DbSet<Configration_Master> Configration_Master { get; set; }
        public DbSet<Consume_Tran> Consume_Tran { get; set; }
        public DbSet<CustBillItem> CustBillItems { get; set; }
        public DbSet<CustBillMaster> CustBillMasters { get; set; }
        public DbSet<Daily_Cash> Daily_Cash { get; set; }
        public DbSet<Daily_Mail> Daily_Mail { get; set; }
        public DbSet<DataCopy> DataCopies { get; set; }
        public DbSet<Discount_Master> Discount_Master { get; set; }
        public DbSet<Est_Billing> Est_Billing { get; set; }
        public DbSet<Expenses_Master> Expenses_Master { get; set; }
        public DbSet<Expenses_Tran> Expenses_Tran { get; set; }
        public DbSet<Feedback_Master> Feedback_Master { get; set; }
        public DbSet<Feedback_Tran> Feedback_Tran { get; set; }
        public DbSet<Fin_Yr_Master> Fin_Yr_Master { get; set; }
        public DbSet<FoodOrder_Customer_Master> FoodOrder_Customer_Master { get; set; }
        public DbSet<FoodOrder_Item_Master> FoodOrder_Item_Master { get; set; }
        public DbSet<FoodOrder_Order_Master> FoodOrder_Order_Master { get; set; }
        public DbSet<FoodOrder_Order_Status> FoodOrder_Order_Status { get; set; }
        public DbSet<FoodOrder_Reference_Master> FoodOrder_Reference_Master { get; set; }
        public DbSet<FoodOrder_Rider_Status> FoodOrder_Rider_Status { get; set; }
        public DbSet<Form_Master> Form_Master { get; set; }
        public DbSet<Gravy_Master> Gravy_Master { get; set; }
        public DbSet<Guest_Master> Guest_Master { get; set; }
        public DbSet<Income_Master> Income_Master { get; set; }
        public DbSet<Income_Tran> Income_Tran { get; set; }
        public DbSet<Inv_Category_Master> Inv_Category_Master { get; set; }
        public DbSet<Inv_Consume_Master> Inv_Consume_Master { get; set; }
        public DbSet<Inv_Item_Master> Inv_Item_Master { get; set; }
        public DbSet<Inv_Unit_Master> Inv_Unit_Master { get; set; }
        public DbSet<Item_Description_Master> Item_Description_Master { get; set; }
        public DbSet<Item_Group_Master> Item_Group_Master { get; set; }
        public DbSet<Item_Master> Item_Master { get; set; }
        public DbSet<Item_Master_Time> Item_Master_Time { get; set; }
        public DbSet<KOT_Delete> KOT_Delete { get; set; }
        public DbSet<KOT_Master> KOT_Master { get; set; }
        public DbSet<Location_Master> Location_Master { get; set; }
        public DbSet<Loyalty_Master> Loyalty_Master { get; set; }
        public DbSet<Loyalty_Program_Master> Loyalty_Program_Master { get; set; }
        public DbSet<Loyalty_Tran> Loyalty_Tran { get; set; }
        public DbSet<MainForm_Master> MainForm_Master { get; set; }
        public DbSet<Map_Sale_Tax> Map_Sale_Tax { get; set; }
        public DbSet<Meal_Master> Meal_Master { get; set; }
        public DbSet<Month_Master> Month_Master { get; set; }
        public DbSet<Online_Item_Master> Online_Item_Master { get; set; }
        public DbSet<Online_Master> Online_Master { get; set; }
        public DbSet<Online_Meal_Master> Online_Meal_Master { get; set; }
        public DbSet<Online_Tag_Master> Online_Tag_Master { get; set; }
        public DbSet<Opening_Balance> Opening_Balance { get; set; }
        public DbSet<Opening_Balance_Inv_Item> Opening_Balance_Inv_Item { get; set; }
        public DbSet<Opening_Balance_Vend> Opening_Balance_Vend { get; set; }
        public DbSet<Outlet_Master> Outlet_Master { get; set; }
        public DbSet<Payment_Master> Payment_Master { get; set; }
        public DbSet<Payment_Master_Vend> Payment_Master_Vend { get; set; }
        public DbSet<PayMode_Master> PayMode_Master { get; set; }
        public DbSet<Recipe_Master> Recipe_Master { get; set; }
        public DbSet<Reference_Master> Reference_Master { get; set; }
        public DbSet<Sale_Master> Sale_Master { get; set; }
        public DbSet<SMS_Recharge> SMS_Recharge { get; set; }
        public DbSet<State_Master> State_Master { get; set; }
        public DbSet<Tab_Process> Tab_Process { get; set; }
        public DbSet<Table_Category_Master> Table_Category_Master { get; set; }
        public DbSet<Table_Master> Table_Master { get; set; }
        public DbSet<Table_Shift> Table_Shift { get; set; }
        public DbSet<Tax_Master> Tax_Master { get; set; }
        public DbSet<User_Address> User_Address { get; set; }
        public DbSet<User_Master> User_Master { get; set; }
        public DbSet<User_Rights> User_Rights { get; set; }
        public DbSet<User_Rights_Main> User_Rights_Main { get; set; }
        public DbSet<Vendor_Master> Vendor_Master { get; set; }
        public DbSet<Void_Bill> Void_Bill { get; set; }
        public DbSet<View_BillPrint> View_BillPrint { get; set; }
        public DbSet<View_Hour> View_Hour { get; set; }
        public DbSet<View_Inv_Item_Master> View_Inv_Item_Master { get; set; }
        public DbSet<View_Inv_TaxDetail> View_Inv_TaxDetail { get; set; }
        public DbSet<View_Item_Master> View_Item_Master { get; set; }
        public DbSet<View_Pay> View_Pay { get; set; }
        public DbSet<View_Pay_Vend> View_Pay_Vend { get; set; }
        public DbSet<View_RunningTable> View_RunningTable { get; set; }
        public DbSet<View_TaxDetail> View_TaxDetail { get; set; }
        public DbSet<View_Top10> View_Top10 { get; set; }
        public DbSet<View_Top15> View_Top15 { get; set; }
        public DbSet<View_Top3> View_Top3 { get; set; }
        public DbSet<View_Tran> View_Tran { get; set; }
        public DbSet<View_Tran_Vend> View_Tran_Vend { get; set; }
    
        public virtual ObjectResult<Nullable<double>> CashBookAdvanceBooking(string dtpFrom, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("CashBookAdvanceBooking", dtpFromParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> CashBookBilling(string dtpFrom, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("CashBookBilling", dtpFromParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> CashBookIncome(string dtpFrom, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("CashBookIncome", dtpFromParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> CashBookingExpenses(string dtpFrom, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("CashBookingExpenses", dtpFromParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> CashBookingVendorPayment(string dtpFrom, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("CashBookingVendorPayment", dtpFromParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> CashBookPayment(string dtpFrom, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("CashBookPayment", dtpFromParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<CashInHeand_Result> CashInHeand(string dDate, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dDateParameter = dDate != null ?
                new ObjectParameter("dDate", dDate) :
                new ObjectParameter("dDate", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CashInHeand_Result>("CashInHeand", dDateParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<CategorySummary_Result> CategorySummary(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd, Nullable<int> rdoQty, Nullable<int> rdoName, Nullable<int> rdoSale)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            var rdoQtyParameter = rdoQty.HasValue ?
                new ObjectParameter("RdoQty", rdoQty) :
                new ObjectParameter("RdoQty", typeof(int));
    
            var rdoNameParameter = rdoName.HasValue ?
                new ObjectParameter("RdoName", rdoName) :
                new ObjectParameter("RdoName", typeof(int));
    
            var rdoSaleParameter = rdoSale.HasValue ?
                new ObjectParameter("rdoSale", rdoSale) :
                new ObjectParameter("rdoSale", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CategorySummary_Result>("CategorySummary", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter, rdoQtyParameter, rdoNameParameter, rdoSaleParameter);
        }
    
        public virtual ObjectResult<DeleteKOT_Result> DeleteKOT(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DeleteKOT_Result>("DeleteKOT", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<ExpensesRegister_Result> ExpensesRegister(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd, Nullable<int> chkAll, Nullable<int> finCd, Nullable<int> iExpCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            var chkAllParameter = chkAll.HasValue ?
                new ObjectParameter("chkAll", chkAll) :
                new ObjectParameter("chkAll", typeof(int));
    
            var finCdParameter = finCd.HasValue ?
                new ObjectParameter("FinCd", finCd) :
                new ObjectParameter("FinCd", typeof(int));
    
            var iExpCdParameter = iExpCd.HasValue ?
                new ObjectParameter("iExpCd", iExpCd) :
                new ObjectParameter("iExpCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExpensesRegister_Result>("ExpensesRegister", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter, chkAllParameter, finCdParameter, iExpCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> GrandTotal(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("GrandTotal", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<GuestSearch_Result> GuestSearch(string txtSearch, Nullable<int> compCd, Nullable<int> busCd, Nullable<int> mobile)
        {
            var txtSearchParameter = txtSearch != null ?
                new ObjectParameter("txtSearch", txtSearch) :
                new ObjectParameter("txtSearch", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            var mobileParameter = mobile.HasValue ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GuestSearch_Result>("GuestSearch", txtSearchParameter, compCdParameter, busCdParameter, mobileParameter);
        }
    
        public virtual ObjectResult<ItemSummary_Result> ItemSummary(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd, Nullable<int> rdoQty, Nullable<int> rdoName, Nullable<int> rdoSale)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            var rdoQtyParameter = rdoQty.HasValue ?
                new ObjectParameter("RdoQty", rdoQty) :
                new ObjectParameter("RdoQty", typeof(int));
    
            var rdoNameParameter = rdoName.HasValue ?
                new ObjectParameter("RdoName", rdoName) :
                new ObjectParameter("RdoName", typeof(int));
    
            var rdoSaleParameter = rdoSale.HasValue ?
                new ObjectParameter("rdoSale", rdoSale) :
                new ObjectParameter("rdoSale", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ItemSummary_Result>("ItemSummary", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter, rdoQtyParameter, rdoNameParameter, rdoSaleParameter);
        }
    
        public virtual ObjectResult<MealSummary_Result> MealSummary(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd, Nullable<int> rdoQty, Nullable<int> rdoName, Nullable<int> rdoSale)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            var rdoQtyParameter = rdoQty.HasValue ?
                new ObjectParameter("RdoQty", rdoQty) :
                new ObjectParameter("RdoQty", typeof(int));
    
            var rdoNameParameter = rdoName.HasValue ?
                new ObjectParameter("RdoName", rdoName) :
                new ObjectParameter("RdoName", typeof(int));
    
            var rdoSaleParameter = rdoSale.HasValue ?
                new ObjectParameter("rdoSale", rdoSale) :
                new ObjectParameter("rdoSale", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MealSummary_Result>("MealSummary", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter, rdoQtyParameter, rdoNameParameter, rdoSaleParameter);
        }
    
        public virtual ObjectResult<SaleRegister_Result> SaleRegister(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd, Nullable<int> rdoNC, Nullable<int> rdoVoid)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            var rdoNCParameter = rdoNC.HasValue ?
                new ObjectParameter("RdoNC", rdoNC) :
                new ObjectParameter("RdoNC", typeof(int));
    
            var rdoVoidParameter = rdoVoid.HasValue ?
                new ObjectParameter("rdoVoid", rdoVoid) :
                new ObjectParameter("rdoVoid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SaleRegister_Result>("SaleRegister", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter, rdoNCParameter, rdoVoidParameter);
        }
    
        public virtual ObjectResult<TOP5_Result> TOP5(string mobile)
        {
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TOP5_Result>("TOP5", mobileParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TotalAmount(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TotalAmount", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TotalBank(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TotalBank", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> TotalBill(string dtpFrom, string dtpTo)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TotalBill", dtpFromParameter, dtpToParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TotalCard(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TotalCard", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TotalCash(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TotalCash", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TotalCredit(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TotalCredit", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TotalDiscount(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TotalDiscount", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TotalDonate(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TotalDonate", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TotalExpenses(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TotalExpenses", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> TotalGuest(string dtpFrom, string dtpTo)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TotalGuest", dtpFromParameter, dtpToParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TotalNC(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TotalNC", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TotalPaytm(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TotalPaytm", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TotalRoundoff(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TotalRoundoff", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TotalSale(string dtpFrom, string dtpTo)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TotalSale", dtpFromParameter, dtpToParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TotalTax(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TotalTax", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TotalTIP(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TotalTIP", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TotalWayOff(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TotalWayOff", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<VoidBill_Result> VoidBill(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VoidBill_Result>("VoidBill", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    }
}
