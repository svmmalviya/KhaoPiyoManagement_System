//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KhaoPiyoManagement_System
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using System.Data.Entity.ModelConfiguration.Conventions;

    public partial class Entities : DbContext
    {
        public Entities()
            : base("name="+(GlobalProperties.Instance.conStringName!=""&& GlobalProperties.Instance.conStringName!=null? GlobalProperties.Instance.conStringName: "Entities"))
        {
            
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);
            modelBuilder.Conventions.Remove<PluralizingTableNameConvention>();
        }
    
        public virtual DbSet<Account_Master> Account_Master { get; set; }
        public virtual DbSet<Attendent_Master> Attendent_Master { get; set; }
        public virtual DbSet<Billing_Detail> Billing_Detail { get; set; }
        public virtual DbSet<Billing_Master> Billing_Master { get; set; }
        public virtual DbSet<Billing_Tax> Billing_Tax { get; set; }
        public virtual DbSet<Category_Master> Category_Master { get; set; }
        public virtual DbSet<Company_Master> Company_Master { get; set; }
        public virtual DbSet<Item_Master> Item_Master { get; set; }
        public virtual DbSet<KOT_Delete> KOT_Delete { get; set; }
        public virtual DbSet<Map_Sale_Tax> Map_Sale_Tax { get; set; }
        public virtual DbSet<Meal_Master> Meal_Master { get; set; }
        public virtual DbSet<PayMode_Master> PayMode_Master { get; set; }
        public virtual DbSet<Table_Master> Table_Master { get; set; }
        public virtual DbSet<User_Master> User_Master { get; set; }
        public virtual DbSet<Void_Bill> Void_Bill { get; set; }
        public virtual DbSet<View_RunningTable> View_RunningTable { get; set; }
        public virtual DbSet<View_Tran> View_Tran { get; set; }
        public virtual DbSet<Expenses_Tran> Expenses_Tran { get; set; }
    
        public virtual ObjectResult<Nullable<double>> CashBookAdvanceBooking(string dtpFrom, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("CashBookAdvanceBooking", dtpFromParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> CashBookBilling(string dtpFrom, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("CashBookBilling", dtpFromParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> CashBookIncome(string dtpFrom, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("CashBookIncome", dtpFromParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> CashBookingExpenses(string dtpFrom, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("CashBookingExpenses", dtpFromParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> CashBookingVendorPayment(string dtpFrom, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("CashBookingVendorPayment", dtpFromParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> CashBookPayment(string dtpFrom, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("CashBookPayment", dtpFromParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<CashInHeand_Result> CashInHeand(string dDate, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dDateParameter = dDate != null ?
                new ObjectParameter("dDate", dDate) :
                new ObjectParameter("dDate", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CashInHeand_Result>("CashInHeand", dDateParameter, compCdParameter, busCdParameter);
        }
    
        public virtual int CategorySummary(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd, Nullable<int> rdoQty, Nullable<int> rdoName, Nullable<int> rdoSale)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            var rdoQtyParameter = rdoQty.HasValue ?
                new ObjectParameter("RdoQty", rdoQty) :
                new ObjectParameter("RdoQty", typeof(int));
    
            var rdoNameParameter = rdoName.HasValue ?
                new ObjectParameter("RdoName", rdoName) :
                new ObjectParameter("RdoName", typeof(int));
    
            var rdoSaleParameter = rdoSale.HasValue ?
                new ObjectParameter("rdoSale", rdoSale) :
                new ObjectParameter("rdoSale", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CategorySummary", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter, rdoQtyParameter, rdoNameParameter, rdoSaleParameter);
        }
    
        public virtual ObjectResult<DeleteKOT_Result> DeleteKOT(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DeleteKOT_Result>("DeleteKOT", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual int ExpensesRegister(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExpensesRegister", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> GrandTotal(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("GrandTotal", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual int ItemSummary(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd, Nullable<int> rdoQty, Nullable<int> rdoName, Nullable<int> rdoSale)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            var rdoQtyParameter = rdoQty.HasValue ?
                new ObjectParameter("RdoQty", rdoQty) :
                new ObjectParameter("RdoQty", typeof(int));
    
            var rdoNameParameter = rdoName.HasValue ?
                new ObjectParameter("RdoName", rdoName) :
                new ObjectParameter("RdoName", typeof(int));
    
            var rdoSaleParameter = rdoSale.HasValue ?
                new ObjectParameter("rdoSale", rdoSale) :
                new ObjectParameter("rdoSale", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ItemSummary", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter, rdoQtyParameter, rdoNameParameter, rdoSaleParameter);
        }
    
        public virtual int MealSummary(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd, Nullable<int> rdoQty, Nullable<int> rdoName, Nullable<int> rdoSale)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            var rdoQtyParameter = rdoQty.HasValue ?
                new ObjectParameter("RdoQty", rdoQty) :
                new ObjectParameter("RdoQty", typeof(int));
    
            var rdoNameParameter = rdoName.HasValue ?
                new ObjectParameter("RdoName", rdoName) :
                new ObjectParameter("RdoName", typeof(int));
    
            var rdoSaleParameter = rdoSale.HasValue ?
                new ObjectParameter("rdoSale", rdoSale) :
                new ObjectParameter("rdoSale", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MealSummary", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter, rdoQtyParameter, rdoNameParameter, rdoSaleParameter);
        }
    
        public virtual ObjectResult<SaleRegister_Result> SaleRegister(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd, Nullable<int> rdoNC, Nullable<int> rdoVoid)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            var rdoNCParameter = rdoNC.HasValue ?
                new ObjectParameter("RdoNC", rdoNC) :
                new ObjectParameter("RdoNC", typeof(int));
    
            var rdoVoidParameter = rdoVoid.HasValue ?
                new ObjectParameter("rdoVoid", rdoVoid) :
                new ObjectParameter("rdoVoid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SaleRegister_Result>("SaleRegister", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter, rdoNCParameter, rdoVoidParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TotalAmount(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TotalAmount", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TotalBank(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TotalBank", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> TotalBill(string dtpFrom, string dtpTo)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TotalBill", dtpFromParameter, dtpToParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TotalCard(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TotalCard", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TotalCash(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TotalCash", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TotalCredit(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TotalCredit", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TotalDiscount(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TotalDiscount", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TotalDonate(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TotalDonate", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TotalExpenses(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TotalExpenses", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> TotalGuest(string dtpFrom, string dtpTo)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TotalGuest", dtpFromParameter, dtpToParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TotalNC(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TotalNC", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TotalPaytm(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TotalPaytm", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TotalRoundoff(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TotalRoundoff", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TotalSale(string dtpFrom, string dtpTo)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TotalSale", dtpFromParameter, dtpToParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TotalTax(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TotalTax", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TotalTIP(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TotalTIP", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> TotalWayOff(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("TotalWayOff", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    
        public virtual ObjectResult<VoidBill_Result> VoidBill(string dtpFrom, string dtpTo, Nullable<int> compCd, Nullable<int> busCd)
        {
            var dtpFromParameter = dtpFrom != null ?
                new ObjectParameter("dtpFrom", dtpFrom) :
                new ObjectParameter("dtpFrom", typeof(string));
    
            var dtpToParameter = dtpTo != null ?
                new ObjectParameter("dtpTo", dtpTo) :
                new ObjectParameter("dtpTo", typeof(string));
    
            var compCdParameter = compCd.HasValue ?
                new ObjectParameter("CompCd", compCd) :
                new ObjectParameter("CompCd", typeof(int));
    
            var busCdParameter = busCd.HasValue ?
                new ObjectParameter("BusCd", busCd) :
                new ObjectParameter("BusCd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VoidBill_Result>("VoidBill", dtpFromParameter, dtpToParameter, compCdParameter, busCdParameter);
        }
    }
}
